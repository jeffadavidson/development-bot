name: Development-Bot-Runs
run-name: Development-Bot-Runs-${{ github.run_number }}
on:
  #workflow_dispatch for manual triggering
  workflow_dispatch: 
  # Trigger on pushes to main branch
  push:
    branches: [main]
  # Schedule 12PM UTC/6AM MT for just kgca-development/development-bot main branch
  schedule:
    - cron: '00 12 * * *'

# Need to grant actions token write permissions to push to git repo and deploy to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    # Only run if in the proper repository
    if: (github.event_name == 'schedule' && github.repository == 'kgca-development/development-bot') || (github.event_name != 'schedule')
    name: Build, Test, and Deploy RSS Feed
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEVELOPMENT_BOT_DEPLOY_KEY }}
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Install dependencies
        run: go mod download
        
      - name: Verify dependencies
        run: go mod verify
        
      - name: Build application
        run: go build -v ./...
        
      - name: Run tests
        run: go test -v ./...
        
      - name: Run go vet
        run: go vet ./...
        
      - name: Check go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi
          
      - name: Execute Development Bot
        run: go run main.go
        
      - name: Validate RSS output
        run: |
          if [ ! -f "output/killarney-development.xml" ]; then
            echo "RSS feed was not generated"
            exit 1
          fi
          # Basic XML validation
          if ! xmllint --noout output/killarney-development.xml 2>/dev/null; then
            echo "Generated RSS feed is not valid XML"
            exit 1
          fi
          echo "RSS feed validation passed"
          
      - name: Commit Data Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ output/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update development data and RSS feed"
            git push origin main
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Create Pages deployment directory
        run: |
          mkdir -p _site
          cp output/killarney-development.xml _site/
          cp README.md _site/
          # Create a simple index.html that redirects to the RSS feed
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Killarney Development RSS Feed</title>
              <meta http-equiv="refresh" content="0; url=killarney-development.xml">
              <link rel="canonical" href="killarney-development.xml">
          </head>
          <body>
              <h1>Killarney Development Activity RSS Feed</h1>
              <p>If you are not redirected automatically, <a href="killarney-development.xml">click here for the RSS feed</a>.</p>
              <p><a href="README.md">View documentation</a></p>
          </body>
          </html>
          EOF
          
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
